<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springbootWebDemo.dao.UserMapper">
    <resultMap id = "result" type = "com.springbootWebDemo.domain.User">
        <result property="user_name" column="user_name" />
        <result property="pass_word" column="pass_word" />
        <result property="age" column="age" />
        <result property="reg_time" column="reg_time" />
    </resultMap>

<!--    public List<User> findUserByUsername(String user_name);-->

<!--    public List<User> listUser();-->

<!--    public User insertUser(User user);-->

<!--    public int delete(int id);-->

<!--    public int update(User user);-->

    <select id="listUser" resultMap="result">
        SELECT * FROM user
    </select>

    <select id="findUserByUsername" resultMap="result">
        SELECT * FROM user where user_name=#{user_name}
    </select>

    <insert id="insertUser" parameterType="com.springbootWebDemo.domain.User"
            keyProperty="id" useGeneratedKeys="true">
        INSERT INTO user
        (
        id, user_name, pass_word, age, reg_time
        )
        VALUES (
        #{id},
        #{user_name, jdbcType=VARCHAR},
        #{pass_word, jdbcType=VARCHAR},
        #{age, jdbcType=VARCHAR},
        #{reg_time, jdbcType=TIMESTAMP}
        )
    </insert>

    <delete id="delete" parameterType="int">
        DELETE FROM user where id = #{id}
    </delete>

    <update id="update" parameterType="com.springbootWebDemo.domain.User">
        UPDATE user set
        user.user_name=#{user_name},
        user.pass_word=#{pass_word},
        user.age=#{age},
        user.reg_time=#{reg_time}
        where user.id=#{id}
    </update>
</mapper>